{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/app/api/create/route.js"],"sourcesContent":["import { clerkClient } from \"@clerk/nextjs/server\";\r\nimport { StreamChat } from \"stream-chat\";\r\n\r\nconst api_key = \"qcv4vtkd8rj5\";\r\nconst api_secret =\r\n  \"d7gbdhdd7yzgwberjg2fkf7enen7r3fwp9eyqg7c7zgzmwp5ywj2zaav6xke4unn\";\r\n\r\nexport async function POST(request) {\r\n  const serverClient = StreamChat.getInstance(api_key, api_secret);\r\n\r\n  function capitalize(str) {\r\n    if (!str || typeof str !== \"string\") {\r\n      return \"\"; // Handle empty or non-string input\r\n    }\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  const user = await request.json();\r\n  console.log(user);\r\n  console.log(user?.data?.id);\r\n\r\n  \r\n  \r\n  const token = serverClient.createToken(user?.data?.id);\r\n  console.log(\"Token generated successfully for user:\", token);\r\n  \r\n  \r\n  const client = await clerkClient();\r\n  \r\n  await serverClient.upsertUser({id : user?.data?.id});\r\n  \r\n  await client.users.updateUserMetadata(user?.data?.id, {\r\n      publicMetadata: {\r\n        token: token,\r\n      },\r\n    });\r\n\r\n    const slugs = [\r\n      \"pythonClub\",\r\n      \"jsClub\",\r\n      \"devopsClub\",\r\n      \"cloudClub\",\r\n      \"cyberClub\",\r\n      \"aiClub\",\r\n    ];\r\n\r\n    slugs.forEach(async (item) => {\r\n      const channel = serverClient.channel(\"messaging\", item, {\r\n        image: \"https://getstream.io/random_png/?name=react\",\r\n        name: capitalize(item) + \" Discussion-2\",\r\n        created_by_id: user?.data?.id,\r\n      });\r\n      await channel.create();\r\n\r\n       channel.addMembers([user?.data?.id]);\r\n    });\r\n\r\n    return Response.json({ message: \"hello world\" });\r\n  \r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,UAAU;AAChB,MAAM,aACJ;AAEK,eAAe,KAAK,OAAO;IAChC,MAAM,eAAe,uJAAA,CAAA,aAAU,CAAC,WAAW,CAAC,SAAS;IAErD,SAAS,WAAW,GAAG;QACrB,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;YACnC,OAAO,IAAI,mCAAmC;QAChD;QACA,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;IACjD;IAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,MAAM,MAAM;IAIxB,MAAM,QAAQ,aAAa,WAAW,CAAC,MAAM,MAAM;IACnD,QAAQ,GAAG,CAAC,0CAA0C;IAGtD,MAAM,SAAS,MAAM,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD;IAE/B,MAAM,aAAa,UAAU,CAAC;QAAC,IAAK,MAAM,MAAM;IAAE;IAElD,MAAM,OAAO,KAAK,CAAC,kBAAkB,CAAC,MAAM,MAAM,IAAI;QAClD,gBAAgB;YACd,OAAO;QACT;IACF;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,OAAO,CAAC,OAAO;QACnB,MAAM,UAAU,aAAa,OAAO,CAAC,aAAa,MAAM;YACtD,OAAO;YACP,MAAM,WAAW,QAAQ;YACzB,eAAe,MAAM,MAAM;QAC7B;QACA,MAAM,QAAQ,MAAM;QAEnB,QAAQ,UAAU,CAAC;YAAC,MAAM,MAAM;SAAG;IACtC;IAEA,OAAO,SAAS,IAAI,CAAC;QAAE,SAAS;IAAc;AAElD","debugId":null}}]
}