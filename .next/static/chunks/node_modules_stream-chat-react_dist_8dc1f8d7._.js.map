{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/i18n/utils.js"],"sourcesContent":["import Dayjs from 'dayjs';\nexport const notValidDateWarning = 'MessageTimestamp was called without a message, or message has invalid created_at date.';\nexport const noParsingFunctionWarning = 'MessageTimestamp was called but there is no datetime parsing function available';\nexport const isNumberOrString = (output) => typeof output === 'string' || typeof output === 'number';\nexport const isDayOrMoment = (output) => !!output?.isSame;\nexport const isDate = (output) => !!output?.getMonth;\nexport function getDateString({ calendar, calendarFormats, format, formatDate, messageCreatedAt, t, tDateTimeParser, timestampTranslationKey, }) {\n    if (!messageCreatedAt ||\n        (typeof messageCreatedAt === 'string' && !Date.parse(messageCreatedAt))) {\n        console.warn(notValidDateWarning);\n        return null;\n    }\n    if (typeof formatDate === 'function') {\n        return formatDate(new Date(messageCreatedAt));\n    }\n    if (t && timestampTranslationKey) {\n        const options = {};\n        if (typeof calendar !== 'undefined' && calendar !== null)\n            options.calendar = calendar;\n        if (typeof calendarFormats !== 'undefined' && calendarFormats !== null)\n            options.calendarFormats = calendarFormats;\n        if (typeof format !== 'undefined' && format !== null)\n            options.format = format;\n        const translatedTimestamp = t(timestampTranslationKey, {\n            ...options,\n            timestamp: new Date(messageCreatedAt),\n        });\n        const translationKeyFound = timestampTranslationKey !== translatedTimestamp;\n        if (translationKeyFound)\n            return translatedTimestamp;\n    }\n    if (!tDateTimeParser) {\n        console.warn(noParsingFunctionWarning);\n        return null;\n    }\n    const parsedTime = tDateTimeParser(messageCreatedAt);\n    if (isDayOrMoment(parsedTime)) {\n        /**\n         * parsedTime.calendar is guaranteed on the type but is only\n         * available when a user calls dayjs.extend(calendar)\n         */\n        return calendar && parsedTime.calendar\n            ? parsedTime.calendar(undefined, calendarFormats || undefined)\n            : parsedTime.format(format || undefined);\n    }\n    if (isDate(parsedTime)) {\n        return parsedTime.toDateString();\n    }\n    if (isNumberOrString(parsedTime)) {\n        return parsedTime;\n    }\n    return null;\n}\nexport const predefinedFormatters = {\n    timestampFormatter: (streamI18n) => (value, _, { calendarFormats, ...options }) => {\n        let parsedCalendarFormats;\n        try {\n            if (!options.calendar) {\n                parsedCalendarFormats = {};\n            }\n            else if (typeof calendarFormats === 'string') {\n                parsedCalendarFormats = JSON.parse(calendarFormats);\n            }\n            else if (typeof calendarFormats === 'object') {\n                parsedCalendarFormats = calendarFormats;\n            }\n        }\n        catch (e) {\n            console.error('[TIMESTAMP FORMATTER]', e);\n        }\n        const result = getDateString({\n            ...options,\n            calendarFormats: parsedCalendarFormats,\n            messageCreatedAt: value,\n            tDateTimeParser: streamI18n.tDateTimeParser,\n        });\n        if (!result || typeof result === 'number') {\n            return JSON.stringify(value);\n        }\n        return result;\n    },\n};\nexport const defaultTranslatorFunction = (key) => key;\nexport const defaultDateTimeParser = (input) => Dayjs(input);\nexport const isLanguageSupported = (language) => {\n    const translations = [\n        'de',\n        'en',\n        'es',\n        'fr',\n        'hi',\n        'it',\n        'ja',\n        'ko',\n        'nl',\n        'pt',\n        'ru',\n        'tr',\n    ];\n    return translations.some((translation) => language === translation);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,sBAAsB;AAC5B,MAAM,2BAA2B;AACjC,MAAM,mBAAmB,CAAC,SAAW,OAAO,WAAW,YAAY,OAAO,WAAW;AACrF,MAAM,gBAAgB,CAAC,SAAW,CAAC,CAAC,QAAQ;AAC5C,MAAM,SAAS,CAAC,SAAW,CAAC,CAAC,QAAQ;AACrC,SAAS,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,EAAE,CAAC,EAAE,eAAe,EAAE,uBAAuB,EAAG;IAC3I,IAAI,CAAC,oBACA,OAAO,qBAAqB,YAAY,CAAC,KAAK,KAAK,CAAC,mBAAoB;QACzE,QAAQ,IAAI,CAAC;QACb,OAAO;IACX;IACA,IAAI,OAAO,eAAe,YAAY;QAClC,OAAO,WAAW,IAAI,KAAK;IAC/B;IACA,IAAI,KAAK,yBAAyB;QAC9B,MAAM,UAAU,CAAC;QACjB,IAAI,OAAO,aAAa,eAAe,aAAa,MAChD,QAAQ,QAAQ,GAAG;QACvB,IAAI,OAAO,oBAAoB,eAAe,oBAAoB,MAC9D,QAAQ,eAAe,GAAG;QAC9B,IAAI,OAAO,WAAW,eAAe,WAAW,MAC5C,QAAQ,MAAM,GAAG;QACrB,MAAM,sBAAsB,EAAE,yBAAyB;YACnD,GAAG,OAAO;YACV,WAAW,IAAI,KAAK;QACxB;QACA,MAAM,sBAAsB,4BAA4B;QACxD,IAAI,qBACA,OAAO;IACf;IACA,IAAI,CAAC,iBAAiB;QAClB,QAAQ,IAAI,CAAC;QACb,OAAO;IACX;IACA,MAAM,aAAa,gBAAgB;IACnC,IAAI,cAAc,aAAa;QAC3B;;;SAGC,GACD,OAAO,YAAY,WAAW,QAAQ,GAChC,WAAW,QAAQ,CAAC,WAAW,mBAAmB,aAClD,WAAW,MAAM,CAAC,UAAU;IACtC;IACA,IAAI,OAAO,aAAa;QACpB,OAAO,WAAW,YAAY;IAClC;IACA,IAAI,iBAAiB,aAAa;QAC9B,OAAO;IACX;IACA,OAAO;AACX;AACO,MAAM,uBAAuB;IAChC,oBAAoB,CAAC,aAAe,CAAC,OAAO,GAAG,EAAE,eAAe,EAAE,GAAG,SAAS;YAC1E,IAAI;YACJ,IAAI;gBACA,IAAI,CAAC,QAAQ,QAAQ,EAAE;oBACnB,wBAAwB,CAAC;gBAC7B,OACK,IAAI,OAAO,oBAAoB,UAAU;oBAC1C,wBAAwB,KAAK,KAAK,CAAC;gBACvC,OACK,IAAI,OAAO,oBAAoB,UAAU;oBAC1C,wBAAwB;gBAC5B;YACJ,EACA,OAAO,GAAG;gBACN,QAAQ,KAAK,CAAC,yBAAyB;YAC3C;YACA,MAAM,SAAS,cAAc;gBACzB,GAAG,OAAO;gBACV,iBAAiB;gBACjB,kBAAkB;gBAClB,iBAAiB,WAAW,eAAe;YAC/C;YACA,IAAI,CAAC,UAAU,OAAO,WAAW,UAAU;gBACvC,OAAO,KAAK,SAAS,CAAC;YAC1B;YACA,OAAO;QACX;AACJ;AACO,MAAM,4BAA4B,CAAC,MAAQ;AAC3C,MAAM,wBAAwB,CAAC,QAAU,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE;AAC/C,MAAM,sBAAsB,CAAC;IAChC,MAAM,eAAe;QACjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;IACD,OAAO,aAAa,IAAI,CAAC,CAAC,cAAgB,aAAa;AAC3D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/i18n/Streami18n.js"],"sourcesContent":["import i18n from 'i18next';\nimport Dayjs from 'dayjs';\nimport calendar from 'dayjs/plugin/calendar';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { defaultTranslatorFunction, predefinedFormatters } from './utils';\nimport { deTranslations, enTranslations, esTranslations, frTranslations, hiTranslations, itTranslations, jaTranslations, koTranslations, nlTranslations, ptTranslations, ruTranslations, trTranslations, } from './translations';\nimport 'dayjs/locale/de';\nimport 'dayjs/locale/es';\nimport 'dayjs/locale/fr';\nimport 'dayjs/locale/hi';\nimport 'dayjs/locale/it';\nimport 'dayjs/locale/ja';\nimport 'dayjs/locale/ko';\nimport 'dayjs/locale/nl';\nimport 'dayjs/locale/pt';\nimport 'dayjs/locale/ru';\nimport 'dayjs/locale/tr';\n// These locale imports also set these locale globally.\n// So As a last step I am going to import english locale\n// to make sure I don't mess up language at other places in app.\nimport 'dayjs/locale/en';\nconst defaultNS = 'translation';\nconst defaultLng = 'en';\nDayjs.extend(updateLocale);\nDayjs.extend(utc);\nDayjs.extend(timezone);\nDayjs.updateLocale('de', {\n    calendar: {\n        lastDay: '[gestern um] LT',\n        lastWeek: '[letzten] dddd [um] LT',\n        nextDay: '[morgen um] LT',\n        nextWeek: 'dddd [um] LT',\n        sameDay: '[heute um] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('es', {\n    calendar: {\n        lastDay: '[ayer a las] LT',\n        lastWeek: '[pasado] dddd [a] LT',\n        nextDay: '[mañana a] LT',\n        nextWeek: 'dddd [a] LT',\n        sameDay: '[hoy a las] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('fr', {\n    calendar: {\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        sameDay: '[Aujourd’hui à] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('hi', {\n    calendar: {\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        sameDay: '[आज] LT',\n        sameElse: 'L',\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiem(hour) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n        return hour;\n    },\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n});\nDayjs.updateLocale('it', {\n    calendar: {\n        lastDay: '[Ieri alle] LT',\n        lastWeek: '[lo scorso] dddd [alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        sameDay: '[Oggi alle] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ja', {\n    calendar: {\n        lastDay: '[昨日] LT',\n        lastWeek: 'dddd LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[次の] dddd LT',\n        sameDay: '[今日] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ko', {\n    calendar: {\n        lastDay: '[어제] LT',\n        lastWeek: '[지난] dddd LT',\n        nextDay: '[내일] LT',\n        nextWeek: 'dddd LT',\n        sameDay: '[오늘] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('nl', {\n    calendar: {\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        sameDay: '[vandaag om] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('pt', {\n    calendar: {\n        lastDay: '[ontem às] LT',\n        lastWeek: 'dddd [passada às] LT',\n        nextDay: '[amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        sameDay: '[hoje às] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ru', {\n    calendar: {\n        lastDay: '[Вчера, в] LT',\n        nextDay: '[Завтра, в] LT',\n        sameDay: '[Сегодня, в] LT',\n    },\n});\nDayjs.updateLocale('tr', {\n    calendar: {\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        sameDay: '[bugün saat] LT',\n        sameElse: 'L',\n    },\n});\nconst en_locale = {\n    formats: {},\n    months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    relativeTime: {},\n    weekdays: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ],\n};\n// Type guards to check DayJs\nconst isDayJs = (dateTimeParser) => dateTimeParser.extend !== undefined;\nconst supportsTz = (dateTimeParser) => dateTimeParser.tz !== undefined;\n/**\n * Wrapper around [i18next](https://www.i18next.com/) class for Stream related translations.\n * Instance of this class should be provided to Chat component to handle translations.\n * Stream provides following list of in-built translations:\n * 1. English (en)\n * 2. Dutch (nl)\n * 3. Russian (ru)\n * 4. Turkish (tr)\n * 5. French (fr)\n * 6. Italian (it)\n * 7. Hindi (hi)\n * 8. Spanish (es)\n * 9. Portuguese (pt)\n * 10. German (de)\n * 11. Japanese (ja)\n * 12. Korean (ko)\n *\n * Simplest way to start using chat components in one of the in-built languages would be following:\n *\n * ```\n * const i18n = new Streami18n({ language 'nl' });\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * If you would like to override certain keys in in-built translation.\n * UI will be automatically updated in this case.\n *\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  translationsForLanguage: {\n *    'Nothing yet...': 'Nog Niet ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n *  }\n * });\n *\n * If you would like to register additional languages, use registerTranslation. You can add as many languages as you want:\n *\n * i18n.registerTranslation('zh', {\n *  'Nothing yet...': 'Nog Niet ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n * });\n *\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * You can use the same function to add whole new language as well.\n *\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation('mr', {\n *  'Nothing yet...': 'काहीही नाही  ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n * });\n *\n * // Make sure to call setLanguage to reflect new language in UI.\n * i18n.setLanguage('it');\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * ## Datetime translations\n *\n * Stream react chat components uses [dayjs](https://day.js.org/en/) internally by default to format datetime stamp.\n * e.g., in ChannelPreview, MessageContent components.\n * Dayjs has locale support as well - https://day.js.org/docs/en/i18n/i18n\n * Dayjs is a lightweight alternative to Momentjs with the same modern API.\n *\n * Dayjs provides locale config for plenty of languages, you can check the whole list of locale configs at following url\n * https://github.com/iamkun/dayjs/tree/dev/src/locale\n *\n * You can either provide the dayjs locale config while registering\n * language with Streami18n (either via constructor or registerTranslation()) or you can provide your own Dayjs or Moment instance\n * to Streami18n constructor, which will be then used internally (using the language locale) in components.\n *\n * 1. Via language registration\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  dayjsLocaleConfigForLanguage: {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * });\n * ```\n *\n * Similarly, you can add locale config for moment while registering translation via `registerTranslation` function.\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation(\n *  'mr',\n *  {\n *    'Nothing yet...': 'काहीही नाही  ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n *  },\n *  {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * );\n *```\n * 2. Provide your own Moment object\n *\n * ```js\n * import 'moment/locale/nl';\n * import 'moment/locale/it';\n * // or if you want to include all locales\n * import 'moment/min/locales';\n *\n * import Moment from moment\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Moment\n * })\n * ```\n *\n * 3. Provide your own Dayjs object\n *\n * ```js\n * import Dayjs from 'dayjs'\n *\n * import 'dayjs/locale/nl';\n * import 'dayjs/locale/it';\n * // or if you want to include all locales\n * import 'dayjs/min/locales';\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Dayjs\n * })\n * ```\n * If you would like to stick with english language for datetimes in Stream components, you can set `disableDateTimeTranslations` to true.\n *\n */\nconst defaultStreami18nOptions = {\n    DateTimeParser: Dayjs,\n    dayjsLocaleConfigForLanguage: null,\n    debug: false,\n    disableDateTimeTranslations: false,\n    language: 'en',\n    logger: (message) => console.warn(message),\n};\nexport class Streami18n {\n    /**\n     * Constructor accepts following options:\n     *  - language (String) default: 'en'\n     *    Language code e.g., en, tr\n     *\n     *  - translationsForLanguage (object)\n     *    Translations object. Please check src/i18n/en.json for example.\n     *\n     *  - disableDateTimeTranslations (boolean) default: false\n     *    Disable translations for date-times\n     *\n     *  - debug (boolean) default: false\n     *    Enable debug mode in internal i18n class\n     *\n     *  - logger (function) default: () => {}\n     *    Logger function to log warnings/errors from this class\n     *\n     *  - dayjsLocaleConfigForLanguage (object) default: 'enConfig'\n     *    [Config object](https://momentjs.com/docs/#/i18n/changing-locale/) for internal moment object,\n     *    corresponding to language (param)\n     *\n     *  - DateTimeParser (function) Moment or Dayjs instance/function.\n     *    Make sure to load all the required locales in this Moment or Dayjs instance that you will be provide to Streami18n\n     *\n     * @param {*} options\n     */\n    constructor(options = {}) {\n        this.i18nInstance = i18n.createInstance();\n        this.Dayjs = null;\n        this.setLanguageCallback = () => null;\n        this.initialized = false;\n        this.t = defaultTranslatorFunction;\n        this.translations = {\n            de: { [defaultNS]: deTranslations },\n            en: { [defaultNS]: enTranslations },\n            es: { [defaultNS]: esTranslations },\n            fr: { [defaultNS]: frTranslations },\n            hi: { [defaultNS]: hiTranslations },\n            it: { [defaultNS]: itTranslations },\n            ja: { [defaultNS]: jaTranslations },\n            ko: { [defaultNS]: koTranslations },\n            nl: { [defaultNS]: nlTranslations },\n            pt: { [defaultNS]: ptTranslations },\n            ru: { [defaultNS]: ruTranslations },\n            tr: { [defaultNS]: trTranslations },\n        };\n        /**\n         * dayjs.defineLanguage('nl') also changes the global locale. We don't want to do that\n         * when user calls registerTranslation() function. So instead we will store the locale configs\n         * given to registerTranslation() function in `dayjsLocales` object, and register the required locale\n         * with moment, when setLanguage is called.\n         * */\n        this.dayjsLocales = {};\n        this.formatters = predefinedFormatters;\n        this.localeExists = (language) => {\n            if (this.isCustomDateTimeParser)\n                return true;\n            return Object.keys(Dayjs.Ls).indexOf(language) > -1;\n        };\n        this.validateCurrentLanguage = () => {\n            const availableLanguages = Object.keys(this.translations);\n            if (availableLanguages.indexOf(this.currentLanguage) === -1) {\n                this.logger(`Streami18n: '${this.currentLanguage}' language is not registered.` +\n                    ` Please make sure to call streami18n.registerTranslation('${this.currentLanguage}', {...}) or ` +\n                    `use one the built-in supported languages - ${this.getAvailableLanguages()}`);\n                this.currentLanguage = defaultLng;\n            }\n        };\n        /** Returns an instance of i18next used within this class instance */\n        this.geti18Instance = () => this.i18nInstance;\n        /** Returns list of available languages. */\n        this.getAvailableLanguages = () => Object.keys(this.translations);\n        /** Returns all the translation dictionary for all inbuilt-languages */\n        this.getTranslations = () => this.translations;\n        const finalOptions = {\n            ...defaultStreami18nOptions,\n            ...options,\n        };\n        // Prepare the i18next configuration.\n        this.logger = finalOptions.logger;\n        this.currentLanguage = finalOptions.language;\n        this.DateTimeParser = finalOptions.DateTimeParser;\n        this.timezone = finalOptions.timezone;\n        this.formatters = { ...predefinedFormatters, ...options?.formatters };\n        try {\n            if (this.DateTimeParser && isDayJs(this.DateTimeParser)) {\n                this.DateTimeParser.extend(LocalizedFormat);\n                this.DateTimeParser.extend(calendar);\n                this.DateTimeParser.extend(localeData);\n                this.DateTimeParser.extend(relativeTime);\n            }\n        }\n        catch (error) {\n            throw Error(`Streami18n: Looks like you wanted to provide Dayjs instance, but something went wrong while adding plugins ${error}`);\n        }\n        this.isCustomDateTimeParser = !!options.DateTimeParser;\n        const translationsForLanguage = finalOptions.translationsForLanguage;\n        if (translationsForLanguage) {\n            this.translations[this.currentLanguage] = {\n                [defaultNS]: this.translations[this.currentLanguage] &&\n                    this.translations[this.currentLanguage][defaultNS]\n                    ? {\n                        ...this.translations[this.currentLanguage][defaultNS],\n                        ...translationsForLanguage,\n                    }\n                    : translationsForLanguage,\n            };\n        }\n        // If translations don't exist for given language, then set it as empty object.\n        if (!this.translations[this.currentLanguage]) {\n            this.translations[this.currentLanguage] = {\n                [defaultNS]: {},\n            };\n        }\n        this.i18nextConfig = {\n            debug: finalOptions.debug,\n            fallbackLng: false,\n            interpolation: { escapeValue: false, formatSeparator: '|' },\n            keySeparator: false,\n            lng: this.currentLanguage,\n            nsSeparator: false,\n        };\n        if (finalOptions.parseMissingKeyHandler) {\n            this.i18nextConfig.parseMissingKeyHandler = finalOptions.parseMissingKeyHandler;\n        }\n        this.validateCurrentLanguage();\n        const dayjsLocaleConfigForLanguage = finalOptions.dayjsLocaleConfigForLanguage;\n        if (dayjsLocaleConfigForLanguage) {\n            this.addOrUpdateLocale(this.currentLanguage, {\n                ...dayjsLocaleConfigForLanguage,\n            });\n        }\n        else if (!this.localeExists(this.currentLanguage)) {\n            this.logger(`Streami18n: Streami18n(...) - Locale config for ${this.currentLanguage} does not exist in momentjs.` +\n                `Please import the locale file using \"import 'moment/locale/${this.currentLanguage}';\" in your app or ` +\n                `register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)`);\n        }\n        this.tDateTimeParser = (timestamp) => {\n            const language = finalOptions.disableDateTimeTranslations ||\n                !this.localeExists(this.currentLanguage)\n                ? defaultLng\n                : this.currentLanguage;\n            if (isDayJs(this.DateTimeParser)) {\n                return supportsTz(this.DateTimeParser)\n                    ? this.DateTimeParser(timestamp).tz(this.timezone).locale(language)\n                    : this.DateTimeParser(timestamp).locale(language);\n            }\n            if (supportsTz(this.DateTimeParser) && this.timezone) {\n                return this.DateTimeParser(timestamp).tz(this.timezone).locale(language);\n            }\n            return this.DateTimeParser(timestamp).locale(language);\n        };\n    }\n    /**\n     * Initializes the i18next instance with configuration (which enables natural language as default keys)\n     */\n    async init() {\n        this.validateCurrentLanguage();\n        try {\n            this.t = await this.i18nInstance.init({\n                ...this.i18nextConfig,\n                lng: this.currentLanguage,\n                resources: this.translations,\n            });\n            this.initialized = true;\n            if (this.formatters) {\n                Object.entries(this.formatters).forEach(([name, formatterFactory]) => {\n                    if (!formatterFactory)\n                        return;\n                    this.i18nInstance.services.formatter?.add(name, formatterFactory(this));\n                });\n            }\n        }\n        catch (error) {\n            this.logger(`Something went wrong with init: ${JSON.stringify(error)}`);\n        }\n        return {\n            t: this.t,\n            tDateTimeParser: this.tDateTimeParser,\n        };\n    }\n    /**\n     * Returns current version translator function.\n     */\n    async getTranslators() {\n        if (!this.initialized) {\n            if (this.dayjsLocales[this.currentLanguage]) {\n                this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n            }\n            return await this.init();\n        }\n        else {\n            return {\n                t: this.t,\n                tDateTimeParser: this.tDateTimeParser,\n            };\n        }\n    }\n    registerTranslation(language, translation, customDayjsLocale) {\n        if (!translation) {\n            this.logger(`Streami18n: registerTranslation(language, translation, customDayjsLocale) called without translation`);\n            return;\n        }\n        if (!this.translations[language]) {\n            this.translations[language] = { [defaultNS]: translation };\n        }\n        else {\n            this.translations[language][defaultNS] = translation;\n        }\n        if (customDayjsLocale) {\n            this.dayjsLocales[language] = { ...customDayjsLocale };\n        }\n        else if (!this.localeExists(language)) {\n            this.logger(`Streami18n: registerTranslation(language, translation, customDayjsLocale) - ` +\n                `Locale config for ${language} does not exist in Dayjs.` +\n                `Please import the locale file using \"import 'dayjs/locale/${language}';\" in your app or ` +\n                `register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)`);\n        }\n        if (this.initialized) {\n            this.i18nInstance.addResources(language, defaultNS, translation);\n        }\n    }\n    addOrUpdateLocale(key, config) {\n        if (this.localeExists(key)) {\n            Dayjs.updateLocale(key, { ...config });\n        }\n        else {\n            // Merging the custom locale config with en config, so missing keys can default to english.\n            Dayjs.locale({ name: key, ...en_locale, ...config }, undefined, true);\n        }\n    }\n    async setLanguage(language) {\n        this.currentLanguage = language;\n        if (!this.initialized)\n            return;\n        try {\n            const t = await this.i18nInstance.changeLanguage(language);\n            if (this.dayjsLocales[language]) {\n                this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n            }\n            this.setLanguageCallback(t);\n            return t;\n        }\n        catch (error) {\n            this.logger(`Failed to set language: ${JSON.stringify(error)}`);\n            return this.t;\n        }\n    }\n    registerSetLanguageCallback(callback) {\n        this.setLanguageCallback = callback;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 957, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/components/Chat/hooks/useChat.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { defaultDateTimeParser, isLanguageSupported, Streami18n, } from '../../../i18n';\nexport const useChat = ({ client, defaultLanguage = 'en', i18nInstance, initialNavOpen, }) => {\n    const [translators, setTranslators] = useState({\n        t: (key) => key,\n        tDateTimeParser: defaultDateTimeParser,\n        userLanguage: 'en',\n    });\n    const [channel, setChannel] = useState();\n    const [mutes, setMutes] = useState([]);\n    const [navOpen, setNavOpen] = useState(initialNavOpen);\n    const [latestMessageDatesByChannels, setLatestMessageDatesByChannels] = useState({});\n    const clientMutes = client.user?.mutes || [];\n    const closeMobileNav = () => setNavOpen(false);\n    const openMobileNav = () => setTimeout(() => setNavOpen(true), 100);\n    const appSettings = useRef(null);\n    const getAppSettings = () => {\n        if (appSettings.current) {\n            return appSettings.current;\n        }\n        appSettings.current = client.getAppSettings();\n        return appSettings.current;\n    };\n    useEffect(() => {\n        if (!client)\n            return;\n        const userAgent = client.getUserAgent();\n        if (!userAgent.includes('stream-chat-react')) {\n            // result looks like: 'stream-chat-react-2.3.2-stream-chat-javascript-client-browser-2.2.2'\n            // the upper-case text between double underscores is replaced with the actual semantic version of the library\n            client.setUserAgent(`stream-chat-react-12.13.1-${userAgent}`);\n        }\n        client.threads.registerSubscriptions();\n        client.polls.registerSubscriptions();\n        return () => {\n            client.threads.unregisterSubscriptions();\n            client.polls.unregisterSubscriptions();\n        };\n    }, [client]);\n    useEffect(() => {\n        setMutes(clientMutes);\n        const handleEvent = (event) => {\n            setMutes(event.me?.mutes || []);\n        };\n        client.on('notification.mutes_updated', handleEvent);\n        return () => client.off('notification.mutes_updated', handleEvent);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clientMutes?.length]);\n    useEffect(() => {\n        let userLanguage = client.user?.language;\n        if (!userLanguage) {\n            const browserLanguage = window.navigator.language.slice(0, 2); // just get language code, not country-specific version\n            userLanguage = isLanguageSupported(browserLanguage)\n                ? browserLanguage\n                : defaultLanguage;\n        }\n        const streami18n = i18nInstance || new Streami18n({ language: userLanguage });\n        streami18n.registerSetLanguageCallback((t) => setTranslators((prevTranslator) => ({ ...prevTranslator, t })));\n        streami18n.getTranslators().then((translator) => {\n            setTranslators({\n                ...translator,\n                userLanguage: userLanguage || defaultLanguage,\n            });\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [i18nInstance]);\n    const setActiveChannel = useCallback(async (activeChannel, watchers = {}, event) => {\n        if (event && event.preventDefault)\n            event.preventDefault();\n        if (activeChannel && Object.keys(watchers).length) {\n            await activeChannel.query({ watch: true, watchers });\n        }\n        setChannel(activeChannel);\n        closeMobileNav();\n    }, []);\n    useEffect(() => {\n        setLatestMessageDatesByChannels({});\n    }, [client.user?.id]);\n    return {\n        channel,\n        closeMobileNav,\n        getAppSettings,\n        latestMessageDatesByChannels,\n        mutes,\n        navOpen,\n        openMobileNav,\n        setActiveChannel,\n        translators,\n    };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/components/Chat/hooks/useCreateChatContext.js"],"sourcesContent":["import { useMemo } from 'react';\nexport const useCreateChatContext = (value) => {\n    const { channel, channelsQueryState, client, closeMobileNav, customClasses, getAppSettings, isMessageAIGenerated, latestMessageDatesByChannels, mutes, navOpen, openMobileNav, searchController, setActiveChannel, theme, useImageFlagEmojisOnWindows, } = value;\n    const channelCid = channel?.cid;\n    const channelsQueryError = channelsQueryState.error;\n    const channelsQueryInProgress = channelsQueryState.queryInProgress;\n    const clientValues = `${client.clientID}${Object.keys(client.activeChannels).length}${Object.keys(client.listeners).length}${client.mutedChannels.length}\n  ${client.user?.id}`;\n    const mutedUsersLength = mutes.length;\n    const chatContext = useMemo(() => ({\n        channel,\n        channelsQueryState,\n        client,\n        closeMobileNav,\n        customClasses,\n        getAppSettings,\n        isMessageAIGenerated,\n        latestMessageDatesByChannels,\n        mutes,\n        navOpen,\n        openMobileNav,\n        searchController,\n        setActiveChannel,\n        theme,\n        useImageFlagEmojisOnWindows,\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        channelCid,\n        channelsQueryError,\n        channelsQueryInProgress,\n        clientValues,\n        getAppSettings,\n        searchController,\n        mutedUsersLength,\n        navOpen,\n        isMessageAIGenerated,\n    ]);\n    return chatContext;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAC;IACjC,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,oBAAoB,EAAE,4BAA4B,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,KAAK,EAAE,2BAA2B,EAAG,GAAG;IAC3P,MAAM,aAAa,SAAS;IAC5B,MAAM,qBAAqB,mBAAmB,KAAK;IACnD,MAAM,0BAA0B,mBAAmB,eAAe;IAClE,MAAM,eAAe,GAAG,OAAO,QAAQ,GAAG,OAAO,IAAI,CAAC,OAAO,cAAc,EAAE,MAAM,GAAG,OAAO,IAAI,CAAC,OAAO,SAAS,EAAE,MAAM,GAAG,OAAO,aAAa,CAAC,MAAM,CAAC;EAC3J,EAAE,OAAO,IAAI,EAAE,IAAI;IACjB,MAAM,mBAAmB,MAAM,MAAM;IACrC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;qDAAE,IAAM,CAAC;gBAC/B;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;YACJ,CAAC;oDACD,uDAAuD;IACvD;QACI;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;IACD,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/components/Chat/hooks/useChannelsQueryState.js"],"sourcesContent":["import { useState } from 'react';\nexport const useChannelsQueryState = () => {\n    const [error, setError] = useState(null);\n    const [queryInProgress, setQueryInProgress] = useState('uninitialized');\n    return {\n        error,\n        queryInProgress,\n        setError,\n        setQueryInProgress,\n    };\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,OAAO;QACH;QACA;QACA;QACA;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/context/utils/getDisplayName.js"],"sourcesContent":["export const getDisplayName = (Component) => Component.displayName || Component.name || 'Component';\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,CAAC,YAAc,UAAU,WAAW,IAAI,UAAU,IAAI,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/context/ChatContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { getDisplayName } from './utils/getDisplayName';\nexport const ChatContext = React.createContext(undefined);\nexport const ChatProvider = ({ children, value, }) => (React.createElement(ChatContext.Provider, { value: value }, children));\nexport const useChatContext = (componentName) => {\n    const contextValue = useContext(ChatContext);\n    if (!contextValue) {\n        console.warn(`The useChatContext hook was called outside of the ChatContext provider. Make sure this hook is called within a child of the Chat component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference so if ChatContext\n * typing is desired while using the HOC withChatContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChatContext = (Component) => {\n    const WithChatContextComponent = (props) => {\n        const chatContext = useChatContext();\n        return React.createElement(Component, { ...props, ...chatContext });\n    };\n    WithChatContextComponent.displayName = `WithChatContext${getDisplayName(Component)}`;\n    return WithChatContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,MAAM,cAAc,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AACxC,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,YAAY,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC5G,MAAM,iBAAiB,CAAC;IAC3B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,+KAA+K,EAAE,cAAc,WAAW,CAAC;QACzN,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,kBAAkB,CAAC;IAC5B,MAAM,2BAA2B,CAAC;QAC9B,MAAM,cAAc;QACpB,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,WAAW;QAAC;IACrE;IACA,yBAAyB,WAAW,GAAG,CAAC,eAAe,EAAE,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD,EAAE,YAAY;IACpF,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1216, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/context/TranslationContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Dayjs from 'dayjs';\nimport calendar from 'dayjs/plugin/calendar';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport { getDisplayName } from './utils/getDisplayName';\nimport { defaultDateTimeParser, defaultTranslatorFunction } from '../i18n/utils';\nDayjs.extend(calendar);\nDayjs.extend(localizedFormat);\nexport const TranslationContext = React.createContext({\n    t: defaultTranslatorFunction,\n    tDateTimeParser: defaultDateTimeParser,\n    userLanguage: 'en',\n});\nexport const TranslationProvider = ({ children, value, }) => (React.createElement(TranslationContext.Provider, { value: value }, children));\nexport const useTranslationContext = (componentName) => {\n    const contextValue = useContext(TranslationContext);\n    if (!contextValue) {\n        console.warn(`The useTranslationContext hook was called outside of the TranslationContext provider. Make sure this hook is called within a child of the Chat component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\nexport const withTranslationContext = (Component) => {\n    const WithTranslationContextComponent = (props) => {\n        const translationContext = useTranslationContext();\n        return React.createElement(Component, { ...props, ...translationContext });\n    };\n    WithTranslationContextComponent.displayName = `WithTranslationContext${getDisplayName(Component)}`;\n    return WithTranslationContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,8IAAA,CAAA,UAAQ;AACrB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,qJAAA,CAAA,UAAe;AACrB,MAAM,qBAAqB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;IAClD,GAAG,mKAAA,CAAA,4BAAyB;IAC5B,iBAAiB,mKAAA,CAAA,wBAAqB;IACtC,cAAc;AAClB;AACO,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,mBAAmB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC1H,MAAM,wBAAwB,CAAC;IAClC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,6LAA6L,EAAE,cAAc,WAAW,CAAC;QACvO,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AACO,MAAM,yBAAyB,CAAC;IACnC,MAAM,kCAAkC,CAAC;QACrC,MAAM,qBAAqB;QAC3B,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,kBAAkB;QAAC;IAC5E;IACA,gCAAgC,WAAW,GAAG,CAAC,sBAAsB,EAAE,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD,EAAE,YAAY;IAClG,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/components/Chat/Chat.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ChannelSearchSource, MessageSearchSource, SearchController, UserSearchSource, } from 'stream-chat';\nimport { useChat } from './hooks/useChat';\nimport { useCreateChatContext } from './hooks/useCreateChatContext';\nimport { useChannelsQueryState } from './hooks/useChannelsQueryState';\nimport { ChatProvider } from '../../context/ChatContext';\nimport { TranslationProvider } from '../../context/TranslationContext';\n/**\n * Wrapper component for a StreamChat application. Chat needs to be placed around any other chat components\n * as it provides the ChatContext.\n */\nexport const Chat = (props) => {\n    const { children, client, customClasses, defaultLanguage, i18nInstance, initialNavOpen = true, isMessageAIGenerated, searchController: customChannelSearchController, theme = 'messaging light', useImageFlagEmojisOnWindows = false, } = props;\n    const { channel, closeMobileNav, getAppSettings, latestMessageDatesByChannels, mutes, navOpen, openMobileNav, setActiveChannel, translators, } = useChat({ client, defaultLanguage, i18nInstance, initialNavOpen });\n    const channelsQueryState = useChannelsQueryState();\n    const searchController = useMemo(() => customChannelSearchController ??\n        new SearchController({\n            sources: [\n                new ChannelSearchSource(client),\n                new UserSearchSource(client),\n                new MessageSearchSource(client),\n            ],\n        }), [client, customChannelSearchController]);\n    const chatContextValue = useCreateChatContext({\n        channel,\n        channelsQueryState,\n        client,\n        closeMobileNav,\n        customClasses,\n        getAppSettings,\n        isMessageAIGenerated,\n        latestMessageDatesByChannels,\n        mutes,\n        navOpen,\n        openMobileNav,\n        searchController,\n        setActiveChannel,\n        theme,\n        useImageFlagEmojisOnWindows,\n    });\n    if (!translators.t)\n        return null;\n    return (React.createElement(ChatProvider, { value: chatContextValue },\n        React.createElement(TranslationProvider, { value: translators }, children)));\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKO,MAAM,OAAO,CAAC;IACjB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,iBAAiB,IAAI,EAAE,oBAAoB,EAAE,kBAAkB,6BAA6B,EAAE,QAAQ,iBAAiB,EAAE,8BAA8B,KAAK,EAAG,GAAG;IAC1O,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,4BAA4B,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,WAAW,EAAG,GAAG,CAAA,GAAA,4LAAA,CAAA,UAAO,AAAD,EAAE;QAAE;QAAQ;QAAiB;QAAc;IAAe;IACjN,MAAM,qBAAqB,CAAA,GAAA,0MAAA,CAAA,wBAAqB,AAAD;IAC/C,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE,IAAM,iCACnC,IAAI,0JAAA,CAAA,mBAAgB,CAAC;gBACjB,SAAS;oBACL,IAAI,0JAAA,CAAA,sBAAmB,CAAC;oBACxB,IAAI,0JAAA,CAAA,mBAAgB,CAAC;oBACrB,IAAI,0JAAA,CAAA,sBAAmB,CAAC;iBAC3B;YACL;yCAAI;QAAC;QAAQ;KAA8B;IAC/C,MAAM,mBAAmB,CAAA,GAAA,yMAAA,CAAA,uBAAoB,AAAD,EAAE;QAC1C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACJ;IACA,IAAI,CAAC,YAAY,CAAC,EACd,OAAO;IACX,OAAQ,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,4KAAA,CAAA,eAAY,EAAE;QAAE,OAAO;IAAiB,GAChE,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,mLAAA,CAAA,sBAAmB,EAAE;QAAE,OAAO;IAAY,GAAG;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1337, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ashis/OneDrive/Desktop/project-hii/commnext/node_modules/stream-chat-react/dist/components/Chat/hooks/useCreateChatClient.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\n/**\n * React hook to create, connect and return `StreamChat` client.\n */\nexport const useCreateChatClient = ({ apiKey, options, tokenOrProvider, userData, }) => {\n    const [chatClient, setChatClient] = useState(null);\n    const [cachedUserData, setCachedUserData] = useState(userData);\n    if (userData.id !== cachedUserData.id) {\n        setCachedUserData(userData);\n    }\n    const [cachedOptions] = useState(options);\n    useEffect(() => {\n        const client = new StreamChat(apiKey, undefined, cachedOptions);\n        let didUserConnectInterrupt = false;\n        const connectionPromise = client\n            .connectUser(cachedUserData, tokenOrProvider)\n            .then(() => {\n            if (!didUserConnectInterrupt)\n                setChatClient(client);\n        });\n        return () => {\n            didUserConnectInterrupt = true;\n            setChatClient(null);\n            connectionPromise\n                .then(() => client.disconnectUser())\n                .then(() => {\n                console.log(`Connection for user \"${cachedUserData.id}\" has been closed`);\n            });\n        };\n    }, [apiKey, cachedUserData, cachedOptions, tokenOrProvider]);\n    return chatClient;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAIO,MAAM,sBAAsB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAG;IAC/E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,IAAI,SAAS,EAAE,KAAK,eAAe,EAAE,EAAE;QACnC,kBAAkB;IACtB;IACA,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACN,MAAM,SAAS,IAAI,0JAAA,CAAA,aAAU,CAAC,QAAQ,WAAW;YACjD,IAAI,0BAA0B;YAC9B,MAAM,oBAAoB,OACrB,WAAW,CAAC,gBAAgB,iBAC5B,IAAI;mEAAC;oBACN,IAAI,CAAC,yBACD,cAAc;gBACtB;;YACA;iDAAO;oBACH,0BAA0B;oBAC1B,cAAc;oBACd,kBACK,IAAI;yDAAC,IAAM,OAAO,cAAc;wDAChC,IAAI;yDAAC;4BACN,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,eAAe,EAAE,CAAC,iBAAiB,CAAC;wBAC5E;;gBACJ;;QACJ;wCAAG;QAAC;QAAQ;QAAgB;QAAe;KAAgB;IAC3D,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}